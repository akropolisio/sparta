{
  "contracts": {
    "CurveModule": {
      "address": "0x5f2d3A4BE1dbE2490a4A9B5Ea7d88ecb8F884CBB",
      "constructorCode": "6080604052611830806100136000396000f3fe",
      "bodyBytecodeHash": "d88ce42e1a0db6982876a59b224e981fcce44f00928dcccdc610e36c01751505",
      "localBytecodeHash": "9a09fdc2d86c2037ce835db3dc2ba5ad7b84848300721b3e914d794ca015e4f4",
      "deployedBytecodeHash": "9a09fdc2d86c2037ce835db3dc2ba5ad7b84848300721b3e914d794ca015e4f4",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initialized",
          "astId": 16215,
          "type": "t_bool",
          "src": "757:24:76"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initializing",
          "astId": 16217,
          "type": "t_bool",
          "src": "876:25:76"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "______gap",
          "astId": 16279,
          "type": "t_array:50<t_uint256>",
          "src": "1982:29:76"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "_owner",
          "astId": 14383,
          "type": "t_address",
          "src": "526:22:63"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "______gap",
          "astId": 14496,
          "type": "t_array:50<t_uint256>",
          "src": "2471:29:63"
        },
        {
          "contract": "Module",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\common\\Module.sol",
          "label": "pool",
          "astId": 43,
          "type": "t_address",
          "src": "214:19:1"
        },
        {
          "contract": "BondingCurve",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\curve\\BondingCurve.sol",
          "label": "curveA",
          "astId": 1751,
          "type": "t_uint256",
          "src": "647:21:21"
        },
        {
          "contract": "BondingCurve",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\curve\\BondingCurve.sol",
          "label": "curveB",
          "astId": 1753,
          "type": "t_uint256",
          "src": "674:21:21"
        },
        {
          "contract": "CurveModule",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\curve\\CurveModule.sol",
          "label": "withdrawFeePercent",
          "astId": 2018,
          "type": "t_uint256",
          "src": "508:33:22"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": [],
        "storageUncheckedVars": [],
        "storageDiff": []
      }
    },
    "AccessModule": {
      "address": "0xB20E057685D8CC35c014ad020EFe00127E517966",
      "constructorCode": "6080604052611c25806100136000396000f3fe",
      "bodyBytecodeHash": "f44cfbdbcea6332b7610e6b6787da3730f176639c5f15d01c8e09e812a4ef45d",
      "localBytecodeHash": "019bcd2e081086fb41dbbaced351bb43bc2f95ad2b80e160adddeb4a0ba27ac8",
      "deployedBytecodeHash": "019bcd2e081086fb41dbbaced351bb43bc2f95ad2b80e160adddeb4a0ba27ac8",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_struct<Roles.Role>": {
          "id": "t_struct<Roles.Role>",
          "kind": "struct",
          "label": "Roles.Role",
          "members": [
            {
              "label": "bearer",
              "astId": 13383,
              "type": "t_mapping<t_bool>",
              "src": "150:32:53"
            }
          ]
        },
        "t_mapping<t_bool>": {
          "id": "t_mapping<t_bool>",
          "valueType": "t_bool",
          "label": "mapping(key => bool)",
          "kind": "mapping"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initialized",
          "astId": 16215,
          "type": "t_bool",
          "src": "757:24:76"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initializing",
          "astId": 16217,
          "type": "t_bool",
          "src": "876:25:76"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "______gap",
          "astId": 16279,
          "type": "t_array:50<t_uint256>",
          "src": "1982:29:76"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "_owner",
          "astId": 14383,
          "type": "t_address",
          "src": "526:22:63"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "______gap",
          "astId": 14496,
          "type": "t_array:50<t_uint256>",
          "src": "2471:29:63"
        },
        {
          "contract": "Module",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\common\\Module.sol",
          "label": "pool",
          "astId": 43,
          "type": "t_address",
          "src": "214:19:1"
        },
        {
          "contract": "PauserRole",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\PauserRole.sol",
          "label": "_pausers",
          "astId": 13603,
          "type": "t_struct<Roles.Role>",
          "src": "327:27:55"
        },
        {
          "contract": "PauserRole",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\PauserRole.sol",
          "label": "______gap",
          "astId": 13703,
          "type": "t_array:50<t_uint256>",
          "src": "1193:29:55"
        },
        {
          "contract": "Pausable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\lifecycle\\Pausable.sol",
          "label": "_paused",
          "astId": 14102,
          "type": "t_bool",
          "src": "909:20:61"
        },
        {
          "contract": "Pausable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\lifecycle\\Pausable.sol",
          "label": "______gap",
          "astId": 14185,
          "type": "t_array:50<t_uint256>",
          "src": "2163:29:61"
        },
        {
          "contract": "WhitelistAdminRole",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\WhitelistAdminRole.sol",
          "label": "_whitelistAdmins",
          "astId": 13726,
          "type": "t_struct<Roles.Role>",
          "src": "477:35:56"
        },
        {
          "contract": "WhitelistAdminRole",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\WhitelistAdminRole.sol",
          "label": "______gap",
          "astId": 13826,
          "type": "t_array:50<t_uint256>",
          "src": "1503:29:56"
        },
        {
          "contract": "WhitelistedRole",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\WhitelistedRole.sol",
          "label": "_whitelisteds",
          "astId": 13852,
          "type": "t_struct<Roles.Role>",
          "src": "709:32:57"
        },
        {
          "contract": "WhitelistedRole",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\WhitelistedRole.sol",
          "label": "______gap",
          "astId": 13960,
          "type": "t_array:50<t_uint256>",
          "src": "1760:29:57"
        },
        {
          "contract": "AccessModule",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\access\\AccessModule.sol",
          "label": "whitelistEnabled",
          "astId": 1618,
          "type": "t_bool",
          "src": "433:28:19"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": [],
        "storageUncheckedVars": [
          {
            "contract": "PauserRole",
            "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\PauserRole.sol",
            "label": "_pausers",
            "astId": 13603,
            "type": "t_struct<Roles.Role>",
            "src": "327:27:55"
          },
          {
            "contract": "WhitelistAdminRole",
            "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\WhitelistAdminRole.sol",
            "label": "_whitelistAdmins",
            "astId": 13726,
            "type": "t_struct<Roles.Role>",
            "src": "477:35:56"
          },
          {
            "contract": "WhitelistedRole",
            "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\WhitelistedRole.sol",
            "label": "_whitelisteds",
            "astId": 13852,
            "type": "t_struct<Roles.Role>",
            "src": "709:32:57"
          }
        ],
        "storageDiff": []
      }
    },
    "LoanLimitsModule": {
      "address": "0x74fc1aC2E9950313C6eEA70f34C04A9B3b7C2265",
      "constructorCode": "6080604052611156806100136000396000f3fe",
      "bodyBytecodeHash": "2cedcca74474f1835dd6d7eb64e59ba93925188ccd109e0169766aded5ba02e8",
      "localBytecodeHash": "359befbfad59e07588c38d455b3737f6636811237642b799b033c509c4920d19",
      "deployedBytecodeHash": "359befbfad59e07588c38d455b3737f6636811237642b799b033c509c4920d19",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_array:7<t_uint256>": {
          "id": "t_array:7<t_uint256>",
          "valueType": "t_uint256",
          "length": "7",
          "kind": "array",
          "label": "uint256[7]"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initialized",
          "astId": 16215,
          "type": "t_bool",
          "src": "757:24:76"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initializing",
          "astId": 16217,
          "type": "t_bool",
          "src": "876:25:76"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "______gap",
          "astId": 16279,
          "type": "t_array:50<t_uint256>",
          "src": "1982:29:76"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "_owner",
          "astId": 14383,
          "type": "t_address",
          "src": "526:22:63"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "______gap",
          "astId": 14496,
          "type": "t_array:50<t_uint256>",
          "src": "2471:29:63"
        },
        {
          "contract": "Module",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\common\\Module.sol",
          "label": "pool",
          "astId": 43,
          "type": "t_address",
          "src": "214:19:1"
        },
        {
          "contract": "LoanLimitsModule",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\loan\\LoanLimitsModule.sol",
          "label": "limits",
          "astId": 5380,
          "type": "t_array:7<t_uint256>",
          "src": "407:17:33"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": [],
        "storageUncheckedVars": [],
        "storageDiff": []
      }
    },
    "FundsModule": {
      "address": "0xA6efd2C7d63C07D1425444a428fC4333b7434e52",
      "constructorCode": "608060405261359a806100136000396000f3fe",
      "bodyBytecodeHash": "16e83f267f6b94ff89d455c8a85898822fc784980e17b817eae1e0955ca899f7",
      "localBytecodeHash": "cc0c28383f6ef8a40797074bb9d1c70d860cbbbda7906ef90ce91482f0778f35",
      "deployedBytecodeHash": "cc0c28383f6ef8a40797074bb9d1c70d860cbbbda7906ef90ce91482f0778f35",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_struct<Roles.Role>": {
          "id": "t_struct<Roles.Role>",
          "kind": "struct",
          "label": "Roles.Role",
          "members": [
            {
              "label": "bearer",
              "astId": 13383,
              "type": "t_mapping<t_bool>",
              "src": "150:32:53"
            }
          ]
        },
        "t_mapping<t_bool>": {
          "id": "t_mapping<t_bool>",
          "valueType": "t_bool",
          "label": "mapping(key => bool)",
          "kind": "mapping"
        },
        "t_mapping<t_uint256>": {
          "id": "t_mapping<t_uint256>",
          "valueType": "t_uint256",
          "label": "mapping(key => uint256)",
          "kind": "mapping"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initialized",
          "astId": 16215,
          "type": "t_bool",
          "src": "757:24:76"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initializing",
          "astId": 16217,
          "type": "t_bool",
          "src": "876:25:76"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "______gap",
          "astId": 16279,
          "type": "t_array:50<t_uint256>",
          "src": "1982:29:76"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "_owner",
          "astId": 14383,
          "type": "t_address",
          "src": "526:22:63"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "______gap",
          "astId": 14496,
          "type": "t_array:50<t_uint256>",
          "src": "2471:29:63"
        },
        {
          "contract": "Module",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\common\\Module.sol",
          "label": "pool",
          "astId": 43,
          "type": "t_address",
          "src": "214:19:1"
        },
        {
          "contract": "FundsOperatorRole",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\funds\\FundsOperatorRole.sol",
          "label": "_operators",
          "astId": 4911,
          "type": "t_struct<Roles.Role>",
          "src": "448:29:31"
        },
        {
          "contract": "BaseFundsModule",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\funds\\BaseFundsModule.sol",
          "label": "lBalance",
          "astId": 3933,
          "type": "t_uint256",
          "src": "774:23:28"
        },
        {
          "contract": "BaseFundsModule",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\funds\\BaseFundsModule.sol",
          "label": "pBalances",
          "astId": 3937,
          "type": "t_mapping<t_uint256>",
          "src": "897:35:28"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": [],
        "storageUncheckedVars": [
          {
            "contract": "FundsOperatorRole",
            "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\funds\\FundsOperatorRole.sol",
            "label": "_operators",
            "astId": 4911,
            "type": "t_struct<Roles.Role>",
            "src": "448:29:31"
          }
        ],
        "storageDiff": []
      }
    },
    "Pool": {
      "address": "0x692Df9cffC23d3bF48da8f7177a64F5E07ACf520",
      "constructorCode": "6080604052611e9f806100136000396000f3fe",
      "bodyBytecodeHash": "2a2ec6424771ea860ab7fa2fd379d2b0ac8060372deba791994a077a87aeef7f",
      "localBytecodeHash": "49b331413c46da1ad0ed1eb58d223e215ab5829375e0b6445872cbdf4bc8edc7",
      "deployedBytecodeHash": "49b331413c46da1ad0ed1eb58d223e215ab5829375e0b6445872cbdf4bc8edc7",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_string": {
          "id": "t_string",
          "kind": "elementary",
          "label": "string"
        },
        "t_struct<AddressMap.Data>": {
          "id": "t_struct<AddressMap.Data>",
          "kind": "struct",
          "label": "AddressMap.Data",
          "members": [
            {
              "label": "valueOf",
              "astId": 9676,
              "type": "t_mapping<t_address>",
              "src": "278:35:35"
            },
            {
              "label": "keyOf",
              "astId": 9680,
              "type": "t_mapping<t_string>",
              "src": "323:33:35"
            },
            {
              "label": "items",
              "astId": 9682,
              "type": "t_struct<AddressList.Data>",
              "src": "366:33:35"
            }
          ]
        },
        "t_mapping<t_address>": {
          "id": "t_mapping<t_address>",
          "valueType": "t_address",
          "label": "mapping(key => address)",
          "kind": "mapping"
        },
        "t_mapping<t_string>": {
          "id": "t_mapping<t_string>",
          "valueType": "t_string",
          "label": "mapping(key => string)",
          "kind": "mapping"
        },
        "t_struct<AddressList.Data>": {
          "id": "t_struct<AddressList.Data>",
          "kind": "struct",
          "label": "AddressList.Data",
          "members": [
            {
              "label": "head",
              "astId": 9073,
              "type": "t_address",
              "src": "178:12:34"
            },
            {
              "label": "tail",
              "astId": 9075,
              "type": "t_address",
              "src": "200:12:34"
            },
            {
              "label": "length",
              "astId": 9077,
              "type": "t_uint256",
              "src": "222:14:34"
            },
            {
              "label": "isContain",
              "astId": 9081,
              "type": "t_mapping<t_bool>",
              "src": "246:37:34"
            },
            {
              "label": "nextOf",
              "astId": 9085,
              "type": "t_mapping<t_address>",
              "src": "293:34:34"
            },
            {
              "label": "prevOf",
              "astId": 9089,
              "type": "t_mapping<t_address>",
              "src": "337:34:34"
            }
          ]
        },
        "t_mapping<t_bool>": {
          "id": "t_mapping<t_bool>",
          "valueType": "t_bool",
          "label": "mapping(key => bool)",
          "kind": "mapping"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initialized",
          "astId": 11652,
          "type": "t_bool",
          "src": "757:24:51"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initializing",
          "astId": 11654,
          "type": "t_bool",
          "src": "876:25:51"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "______gap",
          "astId": 11716,
          "type": "t_array:50<t_uint256>",
          "src": "1982:29:51"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "_owner",
          "astId": 10896,
          "type": "t_address",
          "src": "526:22:45"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "______gap",
          "astId": 11009,
          "type": "t_array:50<t_uint256>",
          "src": "2471:29:45"
        },
        {
          "contract": "Pool",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\core\\Pool.sol",
          "label": "name",
          "astId": 175,
          "type": "t_string",
          "src": "209:19:3"
        },
        {
          "contract": "Pool",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\core\\Pool.sol",
          "label": "description",
          "astId": 177,
          "type": "t_string",
          "src": "234:26:3"
        },
        {
          "contract": "Pool",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\core\\Pool.sol",
          "label": "founder",
          "astId": 179,
          "type": "t_address",
          "src": "266:22:3"
        },
        {
          "contract": "Pool",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\core\\Pool.sol",
          "label": "modules",
          "astId": 181,
          "type": "t_struct<AddressMap.Data>",
          "src": "317:23:3"
        },
        {
          "contract": "Pool",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\core\\Pool.sol",
          "label": "is_constant",
          "astId": 191,
          "type": "t_mapping<t_bool>",
          "src": "468:43:3"
        },
        {
          "contract": "Pool",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\core\\Pool.sol",
          "label": "abiOf",
          "astId": 195,
          "type": "t_mapping<t_string>",
          "src": "622:39:3"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": []
      }
    },
    "LoanProposalsModule": {
      "address": "0xcE6711bc8932C08364F42d96727A0fB5BF6CBC10",
      "constructorCode": "6080604052613975806100136000396000f3fe",
      "bodyBytecodeHash": "a5bad7c71da5096a380d6051648d2ef82d5c28cb829e67b6115feefe05be0b91",
      "localBytecodeHash": "2bcbd3c5bf73932dd370b445a09310010e906abe5718b2428e97ecae03dcb9a2",
      "deployedBytecodeHash": "2bcbd3c5bf73932dd370b445a09310010e906abe5718b2428e97ecae03dcb9a2",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_struct<LoanProposalsModule.DebtProposal>": {
          "id": "t_struct<LoanProposalsModule.DebtProposal>",
          "kind": "struct",
          "label": "LoanProposalsModule.DebtProposal",
          "members": [
            {
              "label": "lAmount",
              "astId": 8067,
              "type": "t_uint256",
              "src": "1518:15:35"
            },
            {
              "label": "interest",
              "astId": 8069,
              "type": "t_uint256",
              "src": "1601:16:35"
            },
            {
              "label": "descriptionHash",
              "astId": 8071,
              "type": "t_bytes32",
              "src": "1695:23:35"
            },
            {
              "label": "pledges",
              "astId": 8075,
              "type": "t_mapping<t_struct<LoanProposalsModule.DebtPledge>>",
              "src": "1796:38:35"
            },
            {
              "label": "supporters",
              "astId": 8078,
              "type": "t_array:dyn<t_address>",
              "src": "1918:20:35"
            },
            {
              "label": "lCovered",
              "astId": 8080,
              "type": "t_uint256",
              "src": "2035:16:35"
            },
            {
              "label": "pCollected",
              "astId": 8082,
              "type": "t_uint256",
              "src": "2117:18:35"
            },
            {
              "label": "created",
              "astId": 8084,
              "type": "t_uint256",
              "src": "2202:15:35"
            },
            {
              "label": "executed",
              "astId": 8086,
              "type": "t_bool",
              "src": "2277:13:35"
            }
          ]
        },
        "t_bytes32": {
          "id": "t_bytes32",
          "kind": "elementary",
          "label": "bytes32"
        },
        "t_struct<LoanProposalsModule.DebtPledge>": {
          "id": "t_struct<LoanProposalsModule.DebtPledge>",
          "kind": "struct",
          "label": "LoanProposalsModule.DebtPledge",
          "members": [
            {
              "label": "senderIndex",
              "astId": 8060,
              "type": "t_uint256",
              "src": "1264:19:35"
            },
            {
              "label": "lAmount",
              "astId": 8062,
              "type": "t_uint256",
              "src": "1332:15:35"
            },
            {
              "label": "pAmount",
              "astId": 8064,
              "type": "t_uint256",
              "src": "1412:15:35"
            }
          ]
        },
        "t_mapping<t_struct<LoanProposalsModule.DebtPledge>>": {
          "id": "t_mapping<t_struct<LoanProposalsModule.DebtPledge>>",
          "valueType": "t_struct<LoanProposalsModule.DebtPledge>",
          "label": "mapping(key => LoanProposalsModule.DebtPledge)",
          "kind": "mapping"
        },
        "t_array:dyn<t_address>": {
          "id": "t_array:dyn<t_address>",
          "valueType": "t_address",
          "length": "dyn",
          "kind": "array",
          "label": "address[]"
        },
        "t_array:dyn<t_struct<LoanProposalsModule.DebtProposal>>": {
          "id": "t_array:dyn<t_struct<LoanProposalsModule.DebtProposal>>",
          "valueType": "t_struct<LoanProposalsModule.DebtProposal>",
          "length": "dyn",
          "kind": "array",
          "label": "LoanProposalsModule.DebtProposal[]"
        },
        "t_mapping<t_array:dyn<t_struct<LoanProposalsModule.DebtProposal>>>": {
          "id": "t_mapping<t_array:dyn<t_struct<LoanProposalsModule.DebtProposal>>>",
          "valueType": "t_array:dyn<t_struct<LoanProposalsModule.DebtProposal>>",
          "label": "mapping(key => LoanProposalsModule.DebtProposal[])",
          "kind": "mapping"
        },
        "t_mapping<t_uint256>": {
          "id": "t_mapping<t_uint256>",
          "valueType": "t_uint256",
          "label": "mapping(key => uint256)",
          "kind": "mapping"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initialized",
          "astId": 16215,
          "type": "t_bool",
          "src": "757:24:76"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initializing",
          "astId": 16217,
          "type": "t_bool",
          "src": "876:25:76"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "______gap",
          "astId": 16279,
          "type": "t_array:50<t_uint256>",
          "src": "1982:29:76"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "_owner",
          "astId": 14383,
          "type": "t_address",
          "src": "526:22:63"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "______gap",
          "astId": 14496,
          "type": "t_array:50<t_uint256>",
          "src": "2471:29:63"
        },
        {
          "contract": "Module",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\common\\Module.sol",
          "label": "pool",
          "astId": 43,
          "type": "t_address",
          "src": "214:19:1"
        },
        {
          "contract": "LoanProposalsModule",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\loan\\LoanProposalsModule.sol",
          "label": "debtProposals",
          "astId": 8092,
          "type": "t_mapping<t_array:dyn<t_struct<LoanProposalsModule.DebtProposal>>>",
          "src": "2355:53:35"
        },
        {
          "contract": "LoanProposalsModule",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\loan\\LoanProposalsModule.sol",
          "label": "lProposals",
          "astId": 8094,
          "type": "t_uint256",
          "src": "2415:26:35"
        },
        {
          "contract": "LoanProposalsModule",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\loan\\LoanProposalsModule.sol",
          "label": "openProposals",
          "astId": 8098,
          "type": "t_mapping<t_uint256>",
          "src": "2448:46:35"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": [],
        "storageUncheckedVars": [
          {
            "contract": "LoanProposalsModule",
            "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\loan\\LoanProposalsModule.sol",
            "label": "debtProposals",
            "astId": 8092,
            "type": "t_mapping<t_array:dyn<t_struct<LoanProposalsModule.DebtProposal>>>",
            "src": "2355:53:35"
          }
        ],
        "storageDiff": []
      }
    },
    "LiquidityModule": {
      "address": "0x12da305C07535641C60C4dB39B6ba603cF896621",
      "constructorCode": "6080604052611c6d806100136000396000f3fe",
      "bodyBytecodeHash": "c6a6eaed48f05a13576dbdf7bb28e98f57edbdb5db849255c55eeb1b0416d52f",
      "localBytecodeHash": "021ecd577dc3d930bc3d000656cba263d35d2c8e591874d8ed0571eb895b8762",
      "deployedBytecodeHash": "021ecd577dc3d930bc3d000656cba263d35d2c8e591874d8ed0571eb895b8762",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_struct<LiquidityModule.LiquidityLimits>": {
          "id": "t_struct<LiquidityModule.LiquidityLimits>",
          "kind": "struct",
          "label": "LiquidityModule.LiquidityLimits",
          "members": [
            {
              "label": "lDepositMin",
              "astId": 5022,
              "type": "t_uint256",
              "src": "442:19:32"
            },
            {
              "label": "pWithdrawMin",
              "astId": 5024,
              "type": "t_uint256",
              "src": "522:20:32"
            }
          ]
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initialized",
          "astId": 16215,
          "type": "t_bool",
          "src": "757:24:76"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initializing",
          "astId": 16217,
          "type": "t_bool",
          "src": "876:25:76"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "______gap",
          "astId": 16279,
          "type": "t_array:50<t_uint256>",
          "src": "1982:29:76"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "_owner",
          "astId": 14383,
          "type": "t_address",
          "src": "526:22:63"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "______gap",
          "astId": 14496,
          "type": "t_array:50<t_uint256>",
          "src": "2471:29:63"
        },
        {
          "contract": "Module",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\common\\Module.sol",
          "label": "pool",
          "astId": 43,
          "type": "t_address",
          "src": "214:19:1"
        },
        {
          "contract": "LiquidityModule",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\liquidity\\LiquidityModule.sol",
          "label": "limits",
          "astId": 5027,
          "type": "t_struct<LiquidityModule.LiquidityLimits>",
          "src": "600:29:32"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": [],
        "storageUncheckedVars": [
          {
            "contract": "LiquidityModule",
            "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\liquidity\\LiquidityModule.sol",
            "label": "limits",
            "astId": 5027,
            "type": "t_struct<LiquidityModule.LiquidityLimits>",
            "src": "600:29:32"
          }
        ],
        "storageDiff": []
      }
    },
    "LoanModule": {
      "address": "0x41D6087858500220B5Ac5a5eB0AbE46E49eBACfa",
      "constructorCode": "6080604052614479806100136000396000f3fe",
      "bodyBytecodeHash": "acc287b0e697969de713e38bf30fd68a413a7bb03facf3e02f365ef2760df37f",
      "localBytecodeHash": "ceecf82de4749ecc367562e79a31dde7d60ac1a3ce459c6f151b3604e1e2c168",
      "deployedBytecodeHash": "ceecf82de4749ecc367562e79a31dde7d60ac1a3ce459c6f151b3604e1e2c168",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_struct<LoanModule.Debt>": {
          "id": "t_struct<LoanModule.Debt>",
          "kind": "struct",
          "label": "LoanModule.Debt",
          "members": [
            {
              "label": "proposal",
              "astId": 5742,
              "type": "t_uint256",
              "src": "1201:16:34"
            },
            {
              "label": "lAmount",
              "astId": 5744,
              "type": "t_uint256",
              "src": "1288:15:34"
            },
            {
              "label": "lastPayment",
              "astId": 5746,
              "type": "t_uint256",
              "src": "1395:19:34"
            },
            {
              "label": "pInterest",
              "astId": 5748,
              "type": "t_uint256",
              "src": "1552:17:34"
            },
            {
              "label": "claimedPledges",
              "astId": 5752,
              "type": "t_mapping<t_uint256>",
              "src": "1642:42:34"
            },
            {
              "label": "defaultExecuted",
              "astId": 5754,
              "type": "t_bool",
              "src": "1744:20:34"
            }
          ]
        },
        "t_mapping<t_uint256>": {
          "id": "t_mapping<t_uint256>",
          "valueType": "t_uint256",
          "label": "mapping(key => uint256)",
          "kind": "mapping"
        },
        "t_array:dyn<t_struct<LoanModule.Debt>>": {
          "id": "t_array:dyn<t_struct<LoanModule.Debt>>",
          "valueType": "t_struct<LoanModule.Debt>",
          "length": "dyn",
          "kind": "array",
          "label": "LoanModule.Debt[]"
        },
        "t_mapping<t_array:dyn<t_struct<LoanModule.Debt>>>": {
          "id": "t_mapping<t_array:dyn<t_struct<LoanModule.Debt>>>",
          "valueType": "t_array:dyn<t_struct<LoanModule.Debt>>",
          "label": "mapping(key => LoanModule.Debt[])",
          "kind": "mapping"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initialized",
          "astId": 16215,
          "type": "t_bool",
          "src": "757:24:76"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initializing",
          "astId": 16217,
          "type": "t_bool",
          "src": "876:25:76"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "______gap",
          "astId": 16279,
          "type": "t_array:50<t_uint256>",
          "src": "1982:29:76"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "_owner",
          "astId": 14383,
          "type": "t_address",
          "src": "526:22:63"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "______gap",
          "astId": 14496,
          "type": "t_array:50<t_uint256>",
          "src": "2471:29:63"
        },
        {
          "contract": "Module",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\common\\Module.sol",
          "label": "pool",
          "astId": 43,
          "type": "t_address",
          "src": "214:19:1"
        },
        {
          "contract": "LoanModule",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\loan\\LoanModule.sol",
          "label": "debts",
          "astId": 5760,
          "type": "t_mapping<t_array:dyn<t_struct<LoanModule.Debt>>>",
          "src": "1846:37:34"
        },
        {
          "contract": "LoanModule",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\loan\\LoanModule.sol",
          "label": "lDebts",
          "astId": 5762,
          "type": "t_uint256",
          "src": "1907:22:34"
        },
        {
          "contract": "LoanModule",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\loan\\LoanModule.sol",
          "label": "activeDebts",
          "astId": 5766,
          "type": "t_mapping<t_uint256>",
          "src": "1936:44:34"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": [],
        "storageUncheckedVars": [
          {
            "contract": "LoanModule",
            "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\loan\\LoanModule.sol",
            "label": "debts",
            "astId": 5760,
            "type": "t_mapping<t_array:dyn<t_struct<LoanModule.Debt>>>",
            "src": "1846:37:34"
          }
        ],
        "storageDiff": []
      }
    },
    "PToken": {
      "address": "0xa18b4d79385d058D54e43e706b5BD265ccE32bf4",
      "constructorCode": "6080604052613400806100136000396000f3fe",
      "bodyBytecodeHash": "ea049c72cf9746951fb0b6052d1367bd4400565688d05c5bcbb157055f0680ea",
      "localBytecodeHash": "b487afaa6a23441af7a09a853c2ca53ce704b4abb931f2e0d9e07474804cd9c2",
      "deployedBytecodeHash": "b487afaa6a23441af7a09a853c2ca53ce704b4abb931f2e0d9e07474804cd9c2",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_mapping<t_uint256>": {
          "id": "t_mapping<t_uint256>",
          "valueType": "t_uint256",
          "label": "mapping(key => uint256)",
          "kind": "mapping"
        },
        "t_string": {
          "id": "t_string",
          "kind": "elementary",
          "label": "string"
        },
        "t_uint8": {
          "id": "t_uint8",
          "kind": "elementary",
          "label": "uint8"
        },
        "t_struct<Roles.Role>": {
          "id": "t_struct<Roles.Role>",
          "kind": "struct",
          "label": "Roles.Role",
          "members": [
            {
              "label": "bearer",
              "astId": 13383,
              "type": "t_mapping<t_bool>",
              "src": "150:32:53"
            }
          ]
        },
        "t_mapping<t_bool>": {
          "id": "t_mapping<t_bool>",
          "valueType": "t_bool",
          "label": "mapping(key => bool)",
          "kind": "mapping"
        },
        "t_struct<DistributionToken.Distribution>": {
          "id": "t_struct<DistributionToken.Distribution>",
          "kind": "struct",
          "label": "DistributionToken.Distribution",
          "members": [
            {
              "label": "amount",
              "astId": 11457,
              "type": "t_uint256",
              "src": "745:14:47"
            },
            {
              "label": "totalSupply",
              "astId": 11459,
              "type": "t_uint256",
              "src": "832:19:47"
            }
          ]
        },
        "t_array:dyn<t_struct<DistributionToken.Distribution>>": {
          "id": "t_array:dyn<t_struct<DistributionToken.Distribution>>",
          "valueType": "t_struct<DistributionToken.Distribution>",
          "length": "dyn",
          "kind": "array",
          "label": "DistributionToken.Distribution[]"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initialized",
          "astId": 16215,
          "type": "t_bool",
          "src": "757:24:76"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initializing",
          "astId": 16217,
          "type": "t_bool",
          "src": "876:25:76"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "______gap",
          "astId": 16279,
          "type": "t_array:50<t_uint256>",
          "src": "1982:29:76"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "_owner",
          "astId": 14383,
          "type": "t_address",
          "src": "526:22:63"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "______gap",
          "astId": 14496,
          "type": "t_array:50<t_uint256>",
          "src": "2471:29:63"
        },
        {
          "contract": "Module",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\common\\Module.sol",
          "label": "pool",
          "astId": 43,
          "type": "t_address",
          "src": "214:19:1"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol",
          "label": "_balances",
          "astId": 14516,
          "type": "t_mapping<t_uint256>",
          "src": "1418:46:64"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol",
          "label": "_allowances",
          "astId": 14522,
          "type": "t_mapping<t_uint256>",
          "src": "1471:69:64"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol",
          "label": "_totalSupply",
          "astId": 14524,
          "type": "t_uint256",
          "src": "1547:28:64"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol",
          "label": "______gap",
          "astId": 14908,
          "type": "t_array:50<t_uint256>",
          "src": "8173:29:64"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Detailed.sol",
          "label": "_name",
          "astId": 14960,
          "type": "t_string",
          "src": "224:20:66"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Detailed.sol",
          "label": "_symbol",
          "astId": 14962,
          "type": "t_string",
          "src": "250:22:66"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Detailed.sol",
          "label": "_decimals",
          "astId": 14964,
          "type": "t_uint8",
          "src": "278:23:66"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Detailed.sol",
          "label": "______gap",
          "astId": 15016,
          "type": "t_array:50<t_uint256>",
          "src": "1654:29:66"
        },
        {
          "contract": "MinterRole",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\MinterRole.sol",
          "label": "_minters",
          "astId": 13480,
          "type": "t_struct<Roles.Role>",
          "src": "327:27:54"
        },
        {
          "contract": "MinterRole",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\MinterRole.sol",
          "label": "______gap",
          "astId": 13580,
          "type": "t_array:50<t_uint256>",
          "src": "1193:29:54"
        },
        {
          "contract": "ERC20Mintable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Mintable.sol",
          "label": "______gap",
          "astId": 15065,
          "type": "t_array:50<t_uint256>",
          "src": "831:29:67"
        },
        {
          "contract": "ERC20Burnable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Burnable.sol",
          "label": "______gap",
          "astId": 14949,
          "type": "t_array:50<t_uint256>",
          "src": "761:29:65"
        },
        {
          "contract": "DistributionToken",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\token\\pTokens\\DistributionToken.sol",
          "label": "distributions",
          "astId": 11463,
          "type": "t_array:dyn<t_struct<DistributionToken.Distribution>>",
          "src": "903:35:47"
        },
        {
          "contract": "DistributionToken",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\token\\pTokens\\DistributionToken.sol",
          "label": "nextDistributions",
          "astId": 11467,
          "type": "t_mapping<t_uint256>",
          "src": "992:52:47"
        },
        {
          "contract": "DistributionToken",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\token\\pTokens\\DistributionToken.sol",
          "label": "nextDistributionTimestamp",
          "astId": 11469,
          "type": "t_uint256",
          "src": "1107:40:47"
        },
        {
          "contract": "DistributionToken",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\token\\pTokens\\DistributionToken.sol",
          "label": "distributionAccumulator",
          "astId": 11471,
          "type": "t_uint256",
          "src": "1242:38:47"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": [],
        "storageUncheckedVars": [
          {
            "contract": "MinterRole",
            "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\MinterRole.sol",
            "label": "_minters",
            "astId": 13480,
            "type": "t_struct<Roles.Role>",
            "src": "327:27:54"
          },
          {
            "contract": "DistributionToken",
            "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\token\\pTokens\\DistributionToken.sol",
            "label": "distributions",
            "astId": 11463,
            "type": "t_array:dyn<t_struct<DistributionToken.Distribution>>",
            "src": "903:35:47"
          }
        ],
        "storageDiff": []
      }
    },
    "RAYModule": {
      "address": "0x783ED830f2dAA9D35C2e0f48551bc7a9E801e0b4",
      "constructorCode": "6080604052612aac806100136000396000f3fe",
      "bodyBytecodeHash": "e3948c3d2278a6a90726f30bcfee806cbd46942e880956305e45c960a7b518f6",
      "localBytecodeHash": "6ad015f13a88d133e9b30ce65ffc1a315c7aeaeb8ce0224a936ff39824bdb754",
      "deployedBytecodeHash": "6ad015f13a88d133e9b30ce65ffc1a315c7aeaeb8ce0224a936ff39824bdb754",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_struct<Roles.Role>": {
          "id": "t_struct<Roles.Role>",
          "kind": "struct",
          "label": "Roles.Role",
          "members": [
            {
              "label": "bearer",
              "astId": 13383,
              "type": "t_mapping<t_bool>",
              "src": "150:32:53"
            }
          ]
        },
        "t_mapping<t_bool>": {
          "id": "t_mapping<t_bool>",
          "valueType": "t_bool",
          "label": "mapping(key => bool)",
          "kind": "mapping"
        },
        "t_struct<DefiModuleBase.Distribution>": {
          "id": "t_struct<DefiModuleBase.Distribution>",
          "kind": "struct",
          "label": "DefiModuleBase.Distribution",
          "members": [
            {
              "label": "amount",
              "astId": 2421,
              "type": "t_uint256",
              "src": "576:14:24"
            },
            {
              "label": "balance",
              "astId": 2423,
              "type": "t_uint256",
              "src": "660:15:24"
            },
            {
              "label": "totalPTK",
              "astId": 2425,
              "type": "t_uint256",
              "src": "722:16:24"
            }
          ]
        },
        "t_array:dyn<t_struct<DefiModuleBase.Distribution>>": {
          "id": "t_array:dyn<t_struct<DefiModuleBase.Distribution>>",
          "valueType": "t_struct<DefiModuleBase.Distribution>",
          "length": "dyn",
          "kind": "array",
          "label": "DefiModuleBase.Distribution[]"
        },
        "t_struct<DefiModuleBase.InvestmentBalance>": {
          "id": "t_struct<DefiModuleBase.InvestmentBalance>",
          "kind": "struct",
          "label": "DefiModuleBase.InvestmentBalance",
          "members": [
            {
              "label": "ptkBalance",
              "astId": 2428,
              "type": "t_uint256",
              "src": "854:18:24"
            },
            {
              "label": "availableBalance",
              "astId": 2430,
              "type": "t_uint256",
              "src": "917:24:24"
            },
            {
              "label": "nextDistribution",
              "astId": 2432,
              "type": "t_uint256",
              "src": "994:24:24"
            }
          ]
        },
        "t_mapping<t_struct<DefiModuleBase.InvestmentBalance>>": {
          "id": "t_mapping<t_struct<DefiModuleBase.InvestmentBalance>>",
          "valueType": "t_struct<DefiModuleBase.InvestmentBalance>",
          "label": "mapping(key => DefiModuleBase.InvestmentBalance)",
          "kind": "mapping"
        },
        "t_bytes32": {
          "id": "t_bytes32",
          "kind": "elementary",
          "label": "bytes32"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initialized",
          "astId": 16215,
          "type": "t_bool",
          "src": "757:24:76"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initializing",
          "astId": 16217,
          "type": "t_bool",
          "src": "876:25:76"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "______gap",
          "astId": 16279,
          "type": "t_array:50<t_uint256>",
          "src": "1982:29:76"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "_owner",
          "astId": 14383,
          "type": "t_address",
          "src": "526:22:63"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "______gap",
          "astId": 14496,
          "type": "t_array:50<t_uint256>",
          "src": "2471:29:63"
        },
        {
          "contract": "Module",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\common\\Module.sol",
          "label": "pool",
          "astId": 43,
          "type": "t_address",
          "src": "214:19:1"
        },
        {
          "contract": "DefiOperatorRole",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\defi\\DefiOperatorRole.sol",
          "label": "_operators",
          "astId": 2992,
          "type": "t_struct<Roles.Role>",
          "src": "445:29:25"
        },
        {
          "contract": "DefiModuleBase",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\defi\\DefiModuleBase.sol",
          "label": "distributions",
          "astId": 2436,
          "type": "t_array:dyn<t_struct<DefiModuleBase.Distribution>>",
          "src": "1077:35:24"
        },
        {
          "contract": "DefiModuleBase",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\defi\\DefiModuleBase.sol",
          "label": "nextDistributionTimestamp",
          "astId": 2438,
          "type": "t_uint256",
          "src": "1167:40:24"
        },
        {
          "contract": "DefiModuleBase",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\defi\\DefiModuleBase.sol",
          "label": "balances",
          "astId": 2442,
          "type": "t_mapping<t_struct<DefiModuleBase.InvestmentBalance>>",
          "src": "1279:53:24"
        },
        {
          "contract": "DefiModuleBase",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\defi\\DefiModuleBase.sol",
          "label": "depositsSinceLastDistribution",
          "astId": 2444,
          "type": "t_uint256",
          "src": "1394:37:24"
        },
        {
          "contract": "DefiModuleBase",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\defi\\DefiModuleBase.sol",
          "label": "withdrawalsSinceLastDistribution",
          "astId": 2446,
          "type": "t_uint256",
          "src": "1503:40:24"
        },
        {
          "contract": "RAYModule",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\defi\\RAYModule.sol",
          "label": "rayTokenId",
          "astId": 3130,
          "type": "t_bytes32",
          "src": "923:25:26"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": []
      }
    }
  },
  "solidityLibs": {},
  "proxies": {
    "akropolis-pool/Pool": [
      {
        "address": "0x113462A2c643dFEb47E9Cc3938FCBab04a058dF9",
        "version": "1.1.0",
        "implementation": "0x692Df9cffC23d3bF48da8f7177a64F5E07ACf520",
        "admin": "0x309a7b0178Cda5Ff4d1A1d6157EE05DEcafF8b15",
        "kind": "Upgradeable"
      }
    ],
    "akropolis-pool/AccessModule": [
      {
        "address": "0x10522512CEb1fd8B1bf077ECb590Eee85856484f",
        "version": "1.1.0",
        "implementation": "0xB20E057685D8CC35c014ad020EFe00127E517966",
        "admin": "0x309a7b0178Cda5Ff4d1A1d6157EE05DEcafF8b15",
        "kind": "Upgradeable"
      }
    ],
    "akropolis-pool/PToken": [
      {
        "address": "0x6553789Cb23a656f2CcbC312AeBFC8C3d697dB1b",
        "version": "1.1.0",
        "implementation": "0xa18b4d79385d058D54e43e706b5BD265ccE32bf4",
        "admin": "0x309a7b0178Cda5Ff4d1A1d6157EE05DEcafF8b15",
        "kind": "Upgradeable"
      }
    ],
    "akropolis-pool/CurveModule": [
      {
        "address": "0xB49c4b7996E36654436F5a8F3C5d97018379971B",
        "version": "1.1.0",
        "implementation": "0x5f2d3A4BE1dbE2490a4A9B5Ea7d88ecb8F884CBB",
        "admin": "0x309a7b0178Cda5Ff4d1A1d6157EE05DEcafF8b15",
        "kind": "Upgradeable"
      }
    ],
    "akropolis-pool/FundsModule": [
      {
        "address": "0xa157b6A439ae79dC6e6bf2E170bf0DcfcAEB5AdE",
        "version": "1.1.0",
        "implementation": "0xA6efd2C7d63C07D1425444a428fC4333b7434e52",
        "admin": "0x309a7b0178Cda5Ff4d1A1d6157EE05DEcafF8b15",
        "kind": "Upgradeable"
      }
    ],
    "akropolis-pool/LiquidityModule": [
      {
        "address": "0xE45dD10Bb723b13Dd6A226718D1A40cad9518C24",
        "version": "1.1.0",
        "implementation": "0x12da305C07535641C60C4dB39B6ba603cF896621",
        "admin": "0x309a7b0178Cda5Ff4d1A1d6157EE05DEcafF8b15",
        "kind": "Upgradeable"
      }
    ],
    "akropolis-pool/LoanLimitsModule": [
      {
        "address": "0xFAc465D511a68059C9C659926Ee881e8331234E6",
        "version": "1.1.0",
        "implementation": "0x74fc1aC2E9950313C6eEA70f34C04A9B3b7C2265",
        "admin": "0x309a7b0178Cda5Ff4d1A1d6157EE05DEcafF8b15",
        "kind": "Upgradeable"
      }
    ],
    "akropolis-pool/LoanProposalsModule": [
      {
        "address": "0xC98560141039adb69d6B5F7949b5403FB8CC5B78",
        "version": "1.1.0",
        "implementation": "0xcE6711bc8932C08364F42d96727A0fB5BF6CBC10",
        "admin": "0x309a7b0178Cda5Ff4d1A1d6157EE05DEcafF8b15",
        "kind": "Upgradeable"
      }
    ],
    "akropolis-pool/LoanModule": [
      {
        "address": "0x49Cc5A2d862567D3b6d8566eDB3FDc174aee8c37",
        "version": "1.1.0",
        "implementation": "0x41D6087858500220B5Ac5a5eB0AbE46E49eBACfa",
        "admin": "0x309a7b0178Cda5Ff4d1A1d6157EE05DEcafF8b15",
        "kind": "Upgradeable"
      }
    ],
    "akropolis-pool/RAYModule": [
      {
        "address": "0x8413433fb3A7EC491c51d415AC437A32C5C81a40",
        "version": "1.1.0",
        "implementation": "0x783ED830f2dAA9D35C2e0f48551bc7a9E801e0b4",
        "admin": "0x309a7b0178Cda5Ff4d1A1d6157EE05DEcafF8b15",
        "kind": "Upgradeable"
      }
    ]
  },
  "manifestVersion": "2.2",
  "version": "1.1.0",
  "proxyAdmin": {
    "address": "0x309a7b0178Cda5Ff4d1A1d6157EE05DEcafF8b15"
  }
}
